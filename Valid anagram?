class Solution(object):
    def isAnagram(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        # If lengths of s and t are different, they can't be anagrams
        if len(s) != len(t):
            return False
        
        # Initialize a dictionary to store character counts for string s
        character = {}
        
        # Count occurrences of each character in string s
        for char in s:
            character[char] = character.get(char, 0) + 1
        
        # Decrement counts for characters in string t
        # If a character count becomes negative, t is not an anagram of s
        for char in t:
            if char not in character:
                return False
            character[char] -= 1
            if character[char] < 0:
                return False
        
        # If all character counts are zero, s and t are anagrams
        return all(count == 0 for count in character.values())

# Example usage:
solution = Solution()
print(solution.isAnagram("anagram", "nagaram"))  # Output: True
print(solution.isAnagram("rat", "car"))          # Output: False
        
